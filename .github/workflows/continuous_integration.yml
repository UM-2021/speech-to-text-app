name: Backend tests

on:
  pull_request:
    branches:
      - dev
    paths:
      - "server/**"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEBUG: 1
      DATABASE: postgres
      DATABASE_NAME: app
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_ENGINE: django.db.backends.postgresql
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
      USE_S3: TRUE
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-django
        working-directory: ./server
      - name: Run migrations
        run: python manage.py migrate
        working-directory: ./server
      - name: Create files folder
        run: rm -rf ./mediafiles/files/audios && mkdir -p ./mediafiles/files/audios
        working-directory: ./server
      - name: Run tests
        run: python manage.py test
        working-directory: ./server
